name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-scan:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:24.0.7
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ---------- Linting ----------
      - name: Lint backend
        run: |
          cd backend
          npm ci
          npm run lint || true  # Remove '|| true' to fail on lint errors

      - name: Lint frontend
        run: |
          cd frontend
          npm ci
          npm run lint || true

      # ---------- Dependency Vulnerability Scan ----------
      - name: Audit backend npm dependencies
        run: |
          cd backend
          npm audit --audit-level=high || true

      - name: Audit frontend npm dependencies
        run: |
          cd frontend
          npm audit --audit-level=high || true

      # ---------- Docker Build ----------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backend-app:${{ github.run_id }} ./backend

      - name: Build frontend image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend-app:${{ github.run_id }} ./frontend

      # ---------- Docker Image Vulnerability Scan ----------
      - name: Scan backend image for vulnerabilities
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/backend-app:${{ github.run_id }}

      - name: Scan frontend image for vulnerabilities
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/frontend-app:${{ github.run_id }}

      # ---------- Docker Compose Smoke Test ----------
      - name: Compose up (smoke test)
        run: docker compose up -d --build

      - name: Wait for backend to be healthy
        run: |
          for i in {1..10}; do
            if curl -f http://localhost:3001/api/health; then
              echo "Backend healthy!"
              exit 0
            fi
            sleep 5
          done
          echo "Backend healthcheck failed"
          docker compose logs
          exit 1

      # ---------- DockerHub Login & Push ----------
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push backend image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend-app:${{ github.run_id }}

      - name: Push frontend image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend-app:${{ github.run_id }}

      # ---------- Cleanup ----------
      - name: Compose down
        if: always()
        run: docker compose down -v

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest
    needs: build-test-scan

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}

      - name: Update image tag in backend and frontend Helm values
        run: |
          sed -i 's/tag: .*/tag: "${{ github.run_id }}"/' helm/gym-web-app-chart/charts/backend/values.yaml
          sed -i 's/tag: .*/tag: "${{ github.run_id }}"/' helm/gym-web-app-chart/charts/frontend/values.yaml

      - name: Commit and push changes
        run: |
          git config --global user.email "maryjaneenechukwu@gmail.com"
          git config --global user.name "Maryjane Enechukwu"
          git add helm/gym-web-app-chart/charts/backend/values.yaml
          git add helm/gym-web-app-chart/charts/frontend/values.yaml
          git commit -m "Update backend and frontend image tags to ${{ github.run_id }}"
          git push
